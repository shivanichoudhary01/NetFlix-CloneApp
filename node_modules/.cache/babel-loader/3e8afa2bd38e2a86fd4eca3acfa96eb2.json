{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\netflix-clone\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport HomeScreen from './screens/HomeScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport auth from './firebase.js';\nimport { login, logout, selectUser } from \"./features/userSlice\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      if (userAuth) {\n        //loggedIn\n        console.log(userAuth);\n        dispatch(login({\n          uid: userAuth.uid,\n          email: userAuth.email\n        }));\n      } else {\n        //loggedout\n        dispatch(logout);\n      }\n    });\n    return unsubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: !user ? /*#__PURE__*/_jsxDEV(LoginScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          children: /*#__PURE__*/_jsxDEV(ProfileScreen, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(HomeScreen, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5J/jBDPxOCuWDcqNaifzAwnDqoU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/netflix-clone/src/App.js"],"names":["React","useEffect","HomeScreen","LoginScreen","ProfileScreen","auth","login","logout","selectUser","BrowserRouter","Router","Switch","Route","Link","useDispatch","useSelector","App","user","dispatch","unsubscribe","onAuthStateChanged","userAuth","console","log","uid","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,sBAA1C;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,QAKO,kBALP;AAMA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,IAAI,GAAGF,WAAW,CAACP,UAAD,CAAxB;AACA,QAAMU,QAAQ,GAAGJ,WAAW,EAA5B;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,WAAW,GAAGd,IAAI,CAACe,kBAAL,CAAwBC,QAAQ,IAAI;AACtD,UAAIA,QAAJ,EAAc;AACZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAH,QAAAA,QAAQ,CACNZ,KAAK,CAAC;AACJkB,UAAAA,GAAG,EAAEH,QAAQ,CAACG,GADV;AAEJC,UAAAA,KAAK,EAAEJ,QAAQ,CAACI;AAFZ,SAAD,CADC,CAAR;AAMD,OATD,MAUK;AACH;AACAP,QAAAA,QAAQ,CAACX,MAAD,CAAR;AACD;AACF,KAfmB,CAApB;AAiBA,WAAOY,WAAP;AACD,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BAEE,QAAC,MAAD;AAAA,gBACG,CAACF,IAAD,gBACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAA,iCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA3CQD,G;UACMD,W,EACID,W;;;KAFVE,G;AA6CT,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\nimport HomeScreen from './screens/HomeScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport auth from './firebase.js';\nimport { login, logout, selectUser } from \"./features/userSlice\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      if (userAuth) {\n        //loggedIn\n        console.log(userAuth);\n        dispatch(\n          login({\n            uid: userAuth.uid,\n            email: userAuth.email,\n          })\n        );\n      }\n      else {\n        //loggedout\n        dispatch(logout);\n      }\n    });\n\n    return unsubscribe;\n  }, [])\n\n  return (\n    <div className=\"app\">\n\n      <Router>\n        {!user ? (\n          <LoginScreen />\n        ) : (\n          <Switch>\n            <Route path='/profile'>\n              <ProfileScreen />\n            </Route>\n            <Route path=\"/\">\n              <HomeScreen />\n            </Route>\n          </Switch>)}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}